name: üõ°Ô∏è Setup Branch Protection

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/branch-protection.yml'

jobs:
  setup-branch-protection:
    name: üõ°Ô∏è Configure Branch Protection
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: üõ°Ô∏è Setup Main Branch Protection
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;

            try {
              await github.rest.repos.updateBranchProtection({
                owner,
                repo,
                branch: 'main',
                required_status_checks: {
                  strict: true,
                  contexts: [
                    'Quality Checks',
                    'Security Audit'
                  ]
                },
                enforce_admins: false,
                required_pull_request_reviews: {
                  required_approving_review_count: 1,
                  dismiss_stale_reviews: true,
                  require_code_owner_reviews: false,
                  require_last_push_approval: true
                },
                restrictions: null,
                allow_force_pushes: false,
                allow_deletions: false,
                block_creations: false,
                required_conversation_resolution: true
              });
              
              console.log('‚úÖ Branch protection rules updated successfully');
            } catch (error) {
              console.log('‚ö†Ô∏è Error setting up branch protection:', error.message);
              console.log('This might be because you need admin permissions or the branch protection already exists.');
            }

      - name: üìù Create CODEOWNERS file
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;

            const codeownersContent = `# Global owners
            * @${owner}

            # Specific file owners
            /.github/ @${owner}
            /package.json @${owner}
            /vercel.json @${owner}

            # Documentation
            /README.md @${owner}
            /docs/ @${owner}`;

            try {
              await github.rest.repos.createOrUpdateFileContents({
                owner,
                repo,
                path: '.github/CODEOWNERS',
                message: 'üõ°Ô∏è Add CODEOWNERS file for code review requirements',
                content: Buffer.from(codeownersContent).toString('base64'),
                branch: 'main'
              });
              console.log('‚úÖ CODEOWNERS file created successfully');
            } catch (error) {
              console.log('‚ö†Ô∏è CODEOWNERS file might already exist:', error.message);
            }
